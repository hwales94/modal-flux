name: Check example in synthetic monitoring

on:
  pull_request:
    branches:
      - main
    paths:
      - "**.py"
  push:
    branches:
      - main
    paths:
      - "**.py"
  workflow_dispatch:

# Cancel previous runs of the same PR but do not cancel previous runs on main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TERM: linux
  TERMINFO: /etc/terminfo

jobs:
  # We monitor our examples regularly for regressions and flakes.
  # This job executes the script on any changed examples.
  test-monitoring:
    name: Test monitoring
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the examples repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout the main repo
        shell: bash
        run: |
          cd ..
          git clone --depth 1 --branch main https://github.com/modal-labs/modal.git
          cd modal
          ls

      - name: Run the monitoring script on each changed example
        id: get-changed-files
        shell: bash
        run: |
          files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '\.py$' | grep -vE '^(misc|internal)/' || true)
          if [ -z "$files" ]; then
            exit 0
          fi
          cd modal
          while IFS= read -r file; do
            stem=$(basename "$file" .py)
            python -m synthetic_monitoring.examples "$stem" ../examples &
          done <<< "$files"
          wait
